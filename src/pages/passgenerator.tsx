import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import {
  FormControl,
  FormErrorMessage,
  FormHelperText,
  FormLabel,
} from "@chakra-ui/form-control";
import { Input } from "@chakra-ui/input";
import { useState } from "react";
import { Button } from "@chakra-ui/button";
import { Heading } from "@chakra-ui/layout";
import { NavBar } from "@/components/ui";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [file, setFile] = useState<File | null>(null);

  const handleClick = () => {
    if (!file) {
      return;
    }

    const reader = new FileReader();
    reader.readAsText(file);
    reader.onload = () => {
      const text = reader.result as string;
      const modifiedCsvData = text
        .split("\n") // 改行で区切る
        .map((row) => {
          const randomString = Math.random().toString(36).substring(2, 12); // ランダムな英数字10文字を生成
          return row.slice(0, -1) + "," + randomString; // 行の末尾にランダムな英数字10文字を追加
        })
        .join("\n"); // 改行で連結

      const encodedCsvData = encodeURIComponent(modifiedCsvData);
      const a = document.createElement("a");
      a.href = `data:text/csv;charset=utf-8,\uFEFF${encodedCsvData}`; // BOMを付加して文字化けを防止
      a.download = "output.csv";
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
    };
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      setFile(file);
    }
  };

  return (
    <>
      <Head>
        <title>Password Generator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar/>
      <Heading m={4}>Password Generator</Heading>
      <FormControl m={4}>
        <FormLabel>CSVファイル</FormLabel>
        <Input type="file" accept=".csv" onChange={handleChange} />
        <FormHelperText>
          パスワードを生成したいCSVファイルを選択してください
        </FormHelperText>
        <Button
          colorScheme="blue"
          isActive={file == null}
          onClick={handleClick}
        >
          パスワード生成
        </Button>
      </FormControl>
    </>
  );
}
